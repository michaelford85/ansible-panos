# REQUIREMENTS
# pip install pan-python
# pip install pandevice
# pip install xmltodict
# ansible-galaxy install paloaltonetworks.paloaltonetworks
# https://www.bountysource.com/issues/59738537-certificate-verify-failed
#   set verify to disable in the virtual environment

---
- name: Create new ACL entry request
  hosts: webserver
  gather_facts: False
  vars_files:
    - ./vars/default_vars.yml

  tasks:
    - name: Check to see if acl_entries_to_apply.csv exists
      stat:
        path: "/home/{{ ansible_user }}/csvfiles/acl_entries_to_apply.csv"
      register: acl_entries_output

    - name: Create new file and add new ACL entry
      copy:
        content: "rule_name,description,source_ip,destination_ip,source_zone,destination_zone,action,type"
        dest: "/home/{{ ansible_user }}/csvfiles/acl_entries_to_apply.csv"
      when: acl_entries_output.stat.exists == False

    - name: Insert new ACL entry at the end of the file.
      lineinfile:
        path: "/home/{{ ansible_user }}/csvfiles/acl_entries_to_apply.csv"
        line: "{{rule_name}},{{rule_name}},{{source_ip}},{{destination_ip}},{{source_zone}},{{destination_zone}},{{rule_action}}"

    # - name: Check to see if acl_entries_to_apply.html exists
    #   stat:
    #     path: "/home/www/html/acl_entries_to_apply.html"
    #   register: acl_entries_to_apply_output
    #   become: yes
    #
    # - name: Delete acl_entries_to_apply.html if it does exist
    #   file:
    #     path: "/home/www/html/acl_entries_to_apply.html"
    #     state: absent
    #   when: acl_entries_output.stat.exists == True
    #   become: yes
    #
    # - name: Read ACLs to apply from CSV file and return a dictionary
    #   read_csv:
    #     path: "/home/{{ ansible_user }}/csvfiles/acl_entries_to_apply.csv"
    #   register: rules
    #
    # - name: Create acl_entries_to_apply.html
    #   template:
    #     src: "{{ playbook_dir }}/templates/current_acl_entries.j2"
    #     dest: "/var/www/html/acl_entries_to_apply.html"
    #   become: yes
    #   vars:
    #     current_rules: "{{ rules.list }}"
    #
    # - name: Tell operator where to see ACLs to Apply
    #   debug:
    #     msg: "Operator: in order to see the ACLs that will be applied, go to http://{{ webserver_fqdn }}/acl_entries_to_apply.html"
